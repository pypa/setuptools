[testenv]
description = perform primary checks (tests, style, types, coverage)
deps =
	# Ideally all the dependencies should be set as "extras"
setenv =
	PYTHONWARNDEFAULTENCODING = 1
	SETUPTOOLS_ENFORCE_DEPRECATION = {env:SETUPTOOLS_ENFORCE_DEPRECATION:1}
commands =
	pytest {posargs}
usedevelop = True
extras =
	test
	check
	cover
	enabler
	type
	core
pass_env =
	SETUPTOOLS_USE_DISTUTILS
	SETUPTOOLS_ENFORCE_DEPRECATION
	PRE_BUILT_SETUPTOOLS_WHEEL
	PRE_BUILT_SETUPTOOLS_SDIST
	TIMEOUT_BACKEND_TEST  # timeout (in seconds) for test_build_meta
	SSH_AUTH_SOCK  # for exercise.py if repo was checked out with ssh
	windir  # required for test_pkg_resources
	# honor git config in pytest-perf
	HOME

[testenv:integration]
deps = {[testenv]deps}
extras = {[testenv]extras}
pass_env =
	{[testenv]pass_env}
	DOWNLOAD_PATH
setenv =
    PROJECT_ROOT = {toxinidir}
commands =
	pytest --integration {posargs:-vv --durations=10} setuptools/tests/integration
	# use verbose mode by default to facilitate debugging from CI logs

[testenv:diffcov]
description = run tests and check that diff from main is covered
deps =
	{[testenv]deps}
	diff-cover
commands =
	pytest {posargs} --cov-report xml
	diff-cover coverage.xml --compare-branch=origin/main --html-report diffcov.html
	diff-cover coverage.xml --compare-branch=origin/main --fail-under=100

[testenv:docs]
description = build the documentation
extras =
	doc
	test
changedir = docs
commands =
	python -m sphinx -W --keep-going . {toxinidir}/build/html
	python -m sphinxlint

[testenv:finalize]
description = assemble changelog and tag a release
skip_install = True
deps =
	towncrier
	bump2version
	jaraco.develop >= 7.23
pass_env = *
commands =
	python tools/finalize.py

[testenv:vendor]
skip_install = True
deps =
	path
	jaraco.packaging
	# workaround for pypa/pyproject-hooks#192
	pyproject-hooks!=1.1
	uv
commands =
	vendor: python -m tools.vendored

[testenv:generate-validation-code]
skip_install = True
deps =
	validate-pyproject[all]==0.23
commands =
	python -m tools.generate_validation_code

[testenv:release]
description = publish the package to PyPI and GitHub
skip_install = True
deps =
	build
	pyproject-hooks!=1.1 # workaround for pypa/setuptools#4333
	twine>=3
	jaraco.develop>=7.1
pass_env =
	TWINE_PASSWORD
	GITHUB_TOKEN
setenv =
	TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
commands =
	python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
	# unset tag_build and tag_date pypa/setuptools#2500
	python setup.py egg_info -Db "" saveopts
	python -m build
	python -m twine upload dist/*
	python -m jaraco.develop.create-github-release
